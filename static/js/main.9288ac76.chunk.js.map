{"version":3,"sources":["App.js","reportWebVitals.js","camera.js","editor.js","404.js","index.js"],"names":["App","props","state","redirect","this","location","pathname","to","id","className","style","fontSize","Button","variant","onClick","setState","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Camera","resize","width","window","innerWidth","height","innerHeight","document","querySelector","canvas","context","getContext","image","aspectRatio","console","log","imageWidth","imageHeight","newWidth","newHeight","drawImage","imageX","imageY","cropToAspect","w","h","imageAspectRatio","cropAspectRatio","tl","getElementById","tr","bl","br","overlay","transform","left","top","setTranslate","x","y","handle","curr_tl","getBoundingClientRect","curr_br","translateWithAspectRatio","translateAll","curr_x","curr_y","startHandleDrag","e","stopPropagation","target","currentTarget","active","activeItem","xOffset","yOffset","type","initialX","touches","clientX","initialY","clientY","moveHandle","preventDefault","currentX","currentY","endHandleDrag","user","userInput","loadStream","bind","stopStream","takePhoto","reload","save","upload","crop","userID","search","substring","addEventListener","removeEventListener","constraints","audio","video","facingMode","navigator","mediaDevices","getUserMedia","mediaStream","srcObject","onloadedmetadata","play","catch","err","name","message","tracks","getTracks","i","length","stop","display","videoWidth","videoHeight","frame","createElement","img","Image","src","toDataURL","setProperty","dispose","event","Math","round","tempCanvas","tempContext","localStorage","setItem","input","currentFile","files","reader","FileReader","onload","result","readAsDataURL","clearRect","tlStyle","trStyle","brStyle","blStyle","overlayStyle","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","autoPlay","Form","Label","File","capture","accept","onChange","Editor","loadImage","dataURL","getItem","getImageData","saveCurrentImageState","convoluteImage","imageData","weights","opaque","createTempImageData","createImageData","side","sqrt","halfSide","floor","data","sw","sh","output","dst","alpha","sy","sx","dstOff","r","g","b","a","cy","cx","scy","scx","srcOff","wt","applyGreyscale","pixels","lightness","parseInt","putImageData","applySepia","newRed","newGreen","newBlue","applyBlur","newImageData","applySharpen","brighten","darken","resetImage","downloadImage","download","boxShadow","size","NotFound","routing","StrictMode","basename","process","exact","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.9288ac76.chunk.js","sourcesContent":["import { React, Component } from 'react';\r\nimport './App.css';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirect: null,\r\n    }\r\n  }\r\n  render() {\r\n    if (this.state.redirect) {\r\n      let location = {\r\n        pathname: this.state.redirect,\r\n      }\r\n      return (\r\n        <Redirect to={location} />\r\n      )\r\n    }\r\n    return (\r\n        <div id=\"home\" className=\"text-white\">\r\n          <h1 style={{fontSize: \"5.5rem\"}}>Snappy</h1>\r\n        <p>The place for easy-peasy 👍 webcam pics and filters. 📸 </p>\r\n          <p>(Right in your browser!)</p>\r\n          <Button variant=\"outline-light\" onClick={() => {this.setState({ redirect: '/camera' })}}>Continue</Button> \r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { React, Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nclass Camera extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: \"\",\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n            userInput: false,\r\n            // image properties used for cropping handles\r\n            image: null,\r\n            imageX: 0,\r\n            imageY: 0,\r\n            imageWidth: 0,\r\n            imageHeight: 0,\r\n            redirect: null,\r\n        };\r\n\r\n        this.xOffset = 0; //used for cropping\r\n        this.yOffset = 0;\r\n        this.active = false\r\n        this.activeItem = null;\r\n        this.cropAspectRatio = null;\r\n\r\n        this.loadStream = this.loadStream.bind(this);\r\n        this.stopStream = this.stopStream.bind(this);\r\n        this.takePhoto = this.takePhoto.bind(this);\r\n        this.reload = this.reload.bind(this);\r\n        this.save = this.save.bind(this);\r\n        this.upload = this.upload.bind(this);\r\n        this.crop = this.crop.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // get ID of user from query string\r\n        let userID = this.props.location.search.substring(3)\r\n        this.setState({ user: userID });\r\n        this.loadStream();\r\n        window.addEventListener(\"resize\", this.resize, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stopStream();\r\n        window.removeEventListener(\"resize\", this.resize);\r\n    }\r\n\r\n    resize = () => {\r\n        this.setState({\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n        });\r\n        if (document.querySelector(\"canvas\")) {\r\n            // resize canvas\r\n            let canvas = document.querySelector(\"canvas\");\r\n            let context = canvas.getContext(\"2d\");\r\n\r\n            canvas.width = window.innerWidth;\r\n            canvas.height = window.innerHeight;\r\n            // resize content\r\n            let image = this.state.image;\r\n            if (image) {\r\n                console.log(\"adding image again\");\r\n                let aspectRatio;\r\n                if (image.id === \"video\") {\r\n                    aspectRatio = this.state.imageWidth / this.state.imageHeight;\r\n                    console.log(\"ratio\", aspectRatio)\r\n                } else {\r\n                    aspectRatio = image.width / image.height;\r\n                }\r\n                let newWidth = canvas.width;\r\n                let newHeight = newWidth / aspectRatio;\r\n                if (newHeight > canvas.height) {\r\n                    newHeight = canvas.height;\r\n                    newWidth = newHeight * aspectRatio;\r\n                }\r\n\r\n                context.drawImage(image, canvas.width / 2 - newWidth / 2, 0, newWidth, newHeight);\r\n                this.setState({\r\n                    imageX: canvas.width / 2 - newWidth / 2,\r\n                    imageY: 0,\r\n                    imageWidth: newWidth,\r\n                    imageHeight: newHeight,\r\n                })\r\n            }\r\n        }\r\n        // console.log(window.innerWidth, window.innerHeight)\r\n    }\r\n\r\n    loadStream() {\r\n        let constraints = { audio: false, video: { width: this.state.width, height: this.state.height, facingMode: 'environment' } };\r\n        navigator.mediaDevices\r\n            .getUserMedia(constraints)\r\n            .then(function (mediaStream) {\r\n                let video = document.querySelector(\"video\");\r\n                video.srcObject = mediaStream;\r\n                video.onloadedmetadata = function (e) {\r\n                    video.play();\r\n                };\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err.name + \": \" + err.message);\r\n            });\r\n    }\r\n\r\n    stopStream() {\r\n        // close the video stream\r\n        let video = document.getElementById(\"video\");\r\n        if (video === null || video.srcObject === null) {\r\n            return\r\n        }\r\n        let stream = video.srcObject;\r\n        let tracks = stream.getTracks();\r\n\r\n        for (let i = 0; i < tracks.length; i++) {\r\n            let track = tracks[i];\r\n            track.stop();\r\n        }\r\n        video.srcObject = null;\r\n    }\r\n\r\n    takePhoto() {\r\n        let w = this.state.width;\r\n        let h = this.state.height;\r\n        let video = document.querySelector(\"video\");\r\n        let canvas = document.querySelector(\"canvas\");\r\n        let context = canvas.getContext('2d');\r\n\r\n        canvas.style.display = \"block\";\r\n        canvas.width = w;\r\n        canvas.height = h;\r\n\r\n        // this maintains the aspect ratio\r\n        let aspectRatio = video.videoWidth / video.videoHeight;\r\n        let newWidth = canvas.width;\r\n        let newHeight = newWidth / aspectRatio;\r\n        if (newHeight > canvas.height) {\r\n            newHeight = canvas.height;\r\n            newWidth = newHeight * aspectRatio;\r\n        }\r\n        let x = canvas.width / 2 - newWidth / 2;\r\n        let y = 0;\r\n        context.drawImage(video, x, y, newWidth, newHeight);\r\n        // save the frame for resizing purposes\r\n        let frame = document.createElement(\"canvas\");\r\n        frame.width = newWidth;\r\n        frame.height = newHeight;\r\n        let frameContext = frame.getContext(\"2d\");\r\n        frameContext.drawImage(canvas, x, y, newWidth, newHeight, 0, 0, newWidth, newHeight);\r\n\r\n        let img = new Image();\r\n        img.src = frame.toDataURL();\r\n        this.setState({\r\n            image: img,\r\n            imageX: x,\r\n            imageY: y,\r\n            imageWidth: newWidth,\r\n            imageHeight: newHeight,\r\n        })\r\n        video.style.display = \"none\";\r\n        this.stopStream();\r\n        canvas.style.setProperty(\"position\", \"static\")\r\n        this.setState({ userInput: true });\r\n    }\r\n\r\n    reload() {\r\n        let video = document.querySelector(\"video\");\r\n        let canvas = document.querySelector(\"canvas\");\r\n        video.style.display = \"block\";\r\n        canvas.style.display = \"none\";\r\n        if (this.canvas !== null) {\r\n            this.canvas.dispose();\r\n        }\r\n        this.cropAspectRatio = null;\r\n        this.loadStream();\r\n        this.setState({\r\n            userInput: false,\r\n            image: null,\r\n        })\r\n\r\n    }\r\n\r\n    save(event) {\r\n        event.preventDefault();\r\n        let canvas = document.getElementById(\"canvas\");\r\n        // let context = canvas.getContext(\"2d\");\r\n        // check size of crop window overlay\r\n        let overlay = document.getElementById(\"imageOverlay\").getBoundingClientRect();\r\n        let x = overlay.left;\r\n        let y = overlay.top;\r\n        let width = Math.round(overlay.width);\r\n        let height = Math.round(overlay.height);\r\n        console.log(width, height, this.state.imageWidth, this.state.imageHeight)\r\n        console.log(width !== this.state.imageWidth);\r\n        console.log(height !== this.state.imageHeight)\r\n        // if the crop handles have been changed, make sure to save that!\r\n        if (width !== this.state.imageWidth || height !== this.state.imageHeight) {\r\n            console.log(\"not the same\")\r\n            let tempCanvas = document.createElement(\"canvas\");\r\n            let tempContext = tempCanvas.getContext(\"2d\")\r\n            tempCanvas.width = width;\r\n            tempCanvas.height = height;\r\n            // save from src canvas to temp\r\n            tempContext.drawImage(canvas, x, y, width, height, 0, 0, width, height);\r\n\r\n            let image = tempCanvas.toDataURL('image/jpeg', 0.8);\r\n            localStorage.setItem(\"photo\", image);\r\n\r\n            this.stopStream(); //this removes video stream\r\n            this.setState({ redirect: \"/editor\" })\r\n\r\n        } else {\r\n            console.log(\"no changes to crop handles\")\r\n            // make temp canvas the same size as image\r\n            let tempCanvas = document.createElement(\"canvas\");\r\n            let tempContext = tempCanvas.getContext(\"2d\")\r\n            tempCanvas.width = this.state.imageWidth;\r\n            tempCanvas.height = this.state.imageHeight;\r\n\r\n            tempContext.drawImage(canvas, this.state.imageX, this.state.imageY, this.state.imageWidth, this.state.imageHeight, 0, 0, this.state.imageWidth, this.state.imageHeight);\r\n            let image = tempCanvas.toDataURL('image/jpeg', 0.8);\r\n            localStorage.setItem(\"photo\", image);\r\n\r\n            this.stopStream(); //this removes video stream\r\n            this.setState({ redirect: \"/editor\" })\r\n        }\r\n    }\r\n\r\n    upload() {\r\n        let w = this.state.width;\r\n        let h = this.state.height;\r\n        let input = document.getElementById(\"cameraInput\");\r\n        let video = document.querySelector(\"video\");\r\n        let canvas = document.querySelector(\"canvas\");\r\n        let context = canvas.getContext('2d')\r\n\r\n        canvas.style.display = \"block\";\r\n        canvas.width = w;\r\n        canvas.height = h;\r\n\r\n        this.stopStream();\r\n        video.style.display = \"none\";\r\n        this.setState({ userInput: true })\r\n        //file reading setup\r\n        const currentFile = input.files[0];\r\n        const reader = new FileReader();\r\n        reader.addEventListener(\"load\", () => {\r\n            const image = document.createElement('img');\r\n            image.onload = () => {\r\n\r\n                let aspectRatio = image.width / image.height;\r\n                let newWidth = canvas.width;\r\n                let newHeight = newWidth / aspectRatio;\r\n                if (newHeight > canvas.height) {\r\n                    newHeight = canvas.height;\r\n                    newWidth = newHeight * aspectRatio;\r\n                }\r\n                let x = canvas.width / 2 - newWidth / 2;\r\n                let y = 0;\r\n                context.drawImage(image, x, y, newWidth, newHeight);\r\n\r\n                this.setState({\r\n                    image: image,\r\n                    imageX: x, //x,//canvas.width / 2 - newWidth / 2,\r\n                    imageY: y, //y, //0,\r\n                    imageWidth: Math.round(newWidth),\r\n                    imageHeight: Math.round(newHeight),\r\n                })\r\n            }\r\n            image.src = reader.result;\r\n\r\n        }, true);\r\n\r\n        if (currentFile) {\r\n            reader.readAsDataURL(currentFile);\r\n        }\r\n    }\r\n\r\n    crop() {\r\n        console.log(\"crop\")\r\n        let canvas = document.getElementById(\"canvas\");\r\n        let context = canvas.getContext(\"2d\");\r\n        // get position of cropping handles\r\n        let tl = document.getElementById(\"tl\").getBoundingClientRect();\r\n        let tr = document.getElementById(\"tr\").getBoundingClientRect();\r\n        let bl = document.getElementById(\"bl\").getBoundingClientRect();\r\n        //set x, y, width and height\r\n        let x = tl.left;\r\n        let y = tl.top;\r\n        let width = tr.left - tl.left + 20;\r\n        let height = bl.top - tl.top + 20;\r\n        //create image of current canvas\r\n        let image = document.createElement(\"img\");\r\n        image.src = canvas.toDataURL();\r\n        image.onload = () => {\r\n            context.clearRect(0, 0, canvas.width, canvas.height);\r\n            //draw lines for cropping handles\r\n            let aspectRatio = width / height;\r\n            let newWidth = canvas.width;\r\n            let newHeight = newWidth / aspectRatio;\r\n            if (newHeight > canvas.height) {\r\n                newHeight = canvas.height;\r\n                newWidth = newHeight * aspectRatio;\r\n            }\r\n            // save cropped image to canvas\r\n            context.drawImage(image, x, y, width, height, canvas.width / 2 - newWidth / 2, 0, newWidth, newHeight);\r\n\r\n            // \"reset\" cropping handles\r\n            this.setState({\r\n                image: image,\r\n                imageX: canvas.width / 2 - newWidth / 2,\r\n                imageY: 0,\r\n                imageWidth: Math.round(newWidth),\r\n                imageHeight: Math.round(newHeight),\r\n            })\r\n\r\n            let tl = document.getElementById(\"tl\");\r\n            let tr = document.getElementById(\"tr\");\r\n            let bl = document.getElementById(\"bl\");\r\n            let br = document.getElementById(\"br\");\r\n            let overlay = document.getElementById(\"imageOverlay\");\r\n\r\n            tl.style.transform = \"none\";\r\n            tr.style.transform = \"none\";\r\n            bl.style.transform = \"none\";\r\n            br.style.transform = \"none\";\r\n            overlay.style.transform = \"none\";\r\n\r\n            tl.style.left = `${canvas.width / 2 - newWidth / 2}px`\r\n            tl.style.top = `${0}px`\r\n\r\n            tr.style.left = `${(canvas.width / 2 - newWidth / 2) + newWidth - 20}px`\r\n            tr.style.top = `${0}px`\r\n\r\n            bl.style.left = `${canvas.width / 2 - newWidth / 2}px`\r\n            bl.style.top = `${newHeight - 20}px`\r\n\r\n            br.style.left = `${(canvas.width / 2 - newWidth / 2) + newWidth - 20}px`\r\n            br.style.top = `${newHeight - 20}px`;\r\n\r\n            overlay.style.left = `${canvas.width / 2 - newWidth / 2}px`\r\n            overlay.style.top = `${0}px`\r\n            overlay.style.width = `${newWidth}px`\r\n            overlay.style.height = `${newHeight}px`;\r\n        }\r\n    }\r\n\r\n    cropToAspect = (aspectRatio) => {\r\n        // let canvas = document.getElementById(\"canvas\");\r\n        // find width and height of image at aspect ratio\r\n        let imageWidth = this.state.imageWidth;\r\n        let imageHeight = this.state.imageHeight;\r\n        let w = imageWidth;\r\n        let h = imageHeight;\r\n        let imageAspectRatio = imageWidth / imageHeight;\r\n\r\n        if (imageAspectRatio > aspectRatio) {\r\n            w = imageWidth * aspectRatio\r\n            //set this.cropAspectRatio to val\r\n            w = w / 2\r\n            this.cropAspectRatio = aspectRatio;\r\n        } else if (imageAspectRatio < aspectRatio) {\r\n            h = imageWidth / aspectRatio;\r\n            //set this.cropAspectRatio to val\r\n            this.cropAspectRatio = aspectRatio;\r\n        }\r\n\r\n        // set cropping handles and overlay position\r\n        let tl = document.getElementById(\"tl\");\r\n        let tr = document.getElementById(\"tr\");\r\n        let bl = document.getElementById(\"bl\");\r\n        let br = document.getElementById(\"br\");\r\n        let overlay = document.getElementById(\"imageOverlay\");\r\n\r\n        // clear any prior transformations\r\n        overlay.style.transform = \"unset\";\r\n\r\n        tl.style.left = `${this.state.imageX}px`\r\n        tl.style.top = `${this.state.imageY}px`\r\n\r\n        tr.style.left = `${this.state.imageX + w - 20}px`\r\n        tr.style.top = `${this.state.imageY}px`\r\n\r\n        bl.style.left = `${this.state.imageX}px`\r\n        bl.style.top = `${this.state.imageY + h - 20}px`\r\n\r\n        br.style.left = `${this.state.imageX + w - 20}px`\r\n        br.style.top = `${this.state.imageY + h - 20}px`;\r\n\r\n        overlay.style.left = `${this.state.imageX}px`\r\n        overlay.style.top = `${this.state.imageY}px`\r\n        overlay.style.width = `${w}px`\r\n        overlay.style.height = `${h}px`;\r\n        //this affects the \"move\" func for crop handles,\r\n        //it creates a set translate, maintaing the aspect ratio\r\n    }\r\n\r\n    // funcs for cropping\r\n    setTranslate = (x, y, handle) => {\r\n        handle.style.left = `${x}px`\r\n        handle.style.top = `${y}px`\r\n        let tl = document.getElementById(\"tl\")\r\n        let tr = document.getElementById(\"tr\")\r\n        let br = document.getElementById(\"br\")\r\n        let bl = document.getElementById(\"bl\")\r\n\r\n        if (handle.id === \"tl\") {\r\n            bl.style.left = `${x}px`;\r\n            tr.style.top = `${y}px`;\r\n        }\r\n        if (handle.id === \"tr\") {\r\n            br.style.left = `${x}px`;\r\n            tl.style.top = `${y}px`;\r\n\r\n        }\r\n        if (handle.id === \"br\") {\r\n            tr.style.left = `${x}px`\r\n            bl.style.top = `${y}px`\r\n        }\r\n        if (handle.id === \"bl\") {\r\n            tl.style.left = `${x}px`;\r\n            br.style.top = `${y}px`;\r\n        }\r\n        // // set overlay\r\n        let overlay = document.getElementById(\"imageOverlay\");\r\n        let curr_tl = document.getElementById(\"tl\").getBoundingClientRect();\r\n        let curr_br = document.getElementById(\"br\").getBoundingClientRect();\r\n        let width = curr_br.left - curr_tl.left + 20;\r\n        let height = curr_br.top - curr_tl.top + 20;\r\n\r\n        overlay.style.left = `${curr_tl.left}px`;\r\n        overlay.style.top = `${curr_tl.top}px`;\r\n        overlay.style.width = `${width}px`\r\n        overlay.style.height = `${height}px`\r\n    }\r\n\r\n    translateWithAspectRatio = (x, y, handle) => {\r\n        // gets weird if opposite handles are moved\r\n        let tl = document.getElementById(\"tl\")\r\n        let tr = document.getElementById(\"tr\")\r\n        let br = document.getElementById(\"br\")\r\n        let bl = document.getElementById(\"bl\")\r\n        let overlay = document.getElementById(\"imageOverlay\");\r\n        let aspectRatio = this.cropAspectRatio\r\n        // keep width and height of aspect ratio\r\n        // (find \"ideal\" x and y)\r\n        handle.style.left = `${x}px`;\r\n\r\n        if (handle.id === \"tl\") {\r\n            bl.style.left = `${x}px`;\r\n        }\r\n        if (handle.id === \"tr\") {\r\n            br.style.left = `${x}px`;\r\n        }\r\n        if (handle.id === \"br\") {\r\n            tr.style.left = `${x}px`\r\n        }\r\n        if (handle.id === \"bl\") {\r\n            tl.style.left = `${x}px`;\r\n        }\r\n        // calc width and height\r\n        let curr_tl = document.getElementById(\"tl\").getBoundingClientRect();\r\n        let curr_br = document.getElementById(\"br\").getBoundingClientRect();\r\n        let width = curr_br.left - curr_tl.left + 20;\r\n        let height = width / aspectRatio;\r\n\r\n        y = curr_br.top - height + 20;\r\n        if (handle.id === \"tl\") {\r\n            tl.style.top = `${y}px`;\r\n            tr.style.top = `${y}px`;\r\n        }\r\n        if (handle.id === \"tr\") {\r\n            tr.style.top = `${y}px`;\r\n            tl.style.top = `${y}px`;\r\n        }\r\n        y = height - 20;\r\n        console.log(y)\r\n        if (handle.id === \"br\") {\r\n            br.style.top = `${y}px`\r\n            bl.style.top = `${y}px`\r\n        }\r\n        if (handle.id === \"bl\") {\r\n            bl.style.top = `${y}px`;\r\n            br.style.top = `${y}px`;\r\n        }\r\n\r\n        // set overlay\r\n        curr_tl = document.getElementById(\"tl\").getBoundingClientRect();\r\n        curr_br = document.getElementById(\"br\").getBoundingClientRect();\r\n        width = curr_br.left - curr_tl.left + 20;\r\n        height = curr_br.top - curr_tl.top + 20;\r\n        overlay.style.transform = \"initial\";\r\n        overlay.style.left = `${curr_tl.left}px`;\r\n        overlay.style.top = `${curr_tl.top}px`;\r\n        overlay.style.width = `${width}px`\r\n        overlay.style.height = `${height}px`\r\n\r\n    }\r\n\r\n    translateAll = (x, y) => {\r\n        // (x, y) are offsets\r\n        console.log(x, y)\r\n        console.log(\"translating\")\r\n        let tl = document.getElementById(\"tl\");\r\n        let tr = document.getElementById(\"tr\");\r\n        let bl = document.getElementById(\"bl\");\r\n        let br = document.getElementById(\"br\");\r\n        let overlay = document.getElementById(\"imageOverlay\");\r\n\r\n\r\n        // need some way to truly reset the translate vals\r\n        // maybe it should be the current val + the offset??\r\n        let left = this.state.imageX + x;\r\n        let top = this.state.imageY + y;\r\n\r\n        overlay.style.left = `${left}px`\r\n        overlay.style.top = `${top}px`\r\n\r\n        let curr_x = overlay.getBoundingClientRect().left;\r\n        let curr_y = overlay.getBoundingClientRect().top;\r\n        let width = overlay.getBoundingClientRect().width - 20\r\n        let height = overlay.getBoundingClientRect().height - 20\r\n\r\n        tl.style.left = `${curr_x}px`\r\n        tl.style.top = `${curr_y}px`\r\n        tr.style.left = `${curr_x + width}px`\r\n        tr.style.top = `${curr_y}px`\r\n        bl.style.left = `${curr_x}px`\r\n        bl.style.top = `${curr_y + height}px`\r\n        br.style.left = `${curr_x + width}px`\r\n        br.style.top = `${curr_y + height}px`\r\n\r\n    }\r\n\r\n    startHandleDrag = (e) => {\r\n        // maybe reset offset and currentX + Y here\r\n        e.stopPropagation()\r\n        if (e.target !== e.currentTarget) {\r\n            if (e.target.id === \"tl\" || e.target.id === \"tr\" || e.target.id === \"bl\" || e.target.id === \"br\" || e.target.id === \"imageOverlay\") {\r\n                this.active = true;\r\n                this.activeItem = e.target;\r\n                if (this.activeItem !== null) {\r\n                    if (!this.activeItem.xOffset) {\r\n                        this.activeItem.xOffset = 0;\r\n                    }\r\n                    if (!this.activeItem.yOffset) {\r\n                        this.activeItem.yOffset = 0;\r\n                    }\r\n                    let activeItem = this.activeItem;\r\n                    if (e.type === \"touchstart\") {\r\n                        activeItem.initialX = e.touches[0].clientX - activeItem.xOffset;\r\n                        activeItem.initialY = e.touches[0].clientY - activeItem.yOffset;\r\n                    } else {\r\n                        activeItem.initialX = e.clientX - activeItem.xOffset;\r\n                        activeItem.initialY = e.clientY - activeItem.yOffset;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    moveHandle = (e) => {\r\n        if (this.active) {\r\n            e.stopPropagation()\r\n            e.preventDefault();\r\n            let activeItem = this.activeItem;\r\n            let x, y;\r\n            if (e.type === \"touchmove\") {\r\n                activeItem.currentX = e.touches[0].clientX - activeItem.initialX;\r\n                activeItem.currentY = e.touches[0].clientY - activeItem.initialY;\r\n                x = e.touches[0].clientX;\r\n                y = e.touches[0].clientY;\r\n            } else {\r\n                activeItem.currentX = e.clientX - activeItem.initialX;\r\n                activeItem.currentY = e.clientY - activeItem.initialY;\r\n                x = e.clientX;\r\n                y = e.clientY;\r\n            }\r\n\r\n            activeItem.xOffset = activeItem.currentX;\r\n            activeItem.yOffset = activeItem.currentY;\r\n            if (this.activeItem.id === \"imageOverlay\") {\r\n                this.translateAll(activeItem.currentX, activeItem.currentY);\r\n            } else if (this.cropAspectRatio) {\r\n                this.translateWithAspectRatio(x, y, activeItem);\r\n            } else {\r\n                this.setTranslate(x, y, activeItem);\r\n            }\r\n        }\r\n    }\r\n\r\n    endHandleDrag = (e) => {\r\n        e.stopPropagation()\r\n        if (this.activeItem !== null) {\r\n            this.activeItem.initialX = this.activeItem.currentX;\r\n            this.activeItem.initialY = this.activeItem.currentY;\r\n        }\r\n        this.active = false;\r\n        this.activeItem = null;\r\n    }\r\n\r\n    render() {\r\n        let handleStyle = {\r\n            \"position\": \"absolute\",\r\n            \"top\": \"0\",\r\n            \"left\": \"0\",\r\n            \"zIndex\": \"999\",\r\n        }\r\n        let location = {\r\n            pathname: this.state.redirect,\r\n        }\r\n\r\n        if (this.state.redirect) {\r\n            return <Redirect to={location} />\r\n        }\r\n\r\n        // position crop handles\r\n        let tlStyle, trStyle, brStyle, blStyle, overlayStyle = {};\r\n        if (this.state.imageWidth || this.state.imageHeight) {\r\n            console.log(this.state.imageX, this.state.imageY, this.state.imageWidth, this.state.imageHeight)\r\n            tlStyle = {\r\n                left: this.state.imageX,\r\n                top: this.state.imageY,\r\n            }\r\n            trStyle = {\r\n                left: this.state.imageX + this.state.imageWidth - 20,\r\n                top: this.state.imageY,\r\n            }\r\n            brStyle = {\r\n                left: this.state.imageX + this.state.imageWidth - 20,\r\n                top: this.state.imageY + this.state.imageHeight - 20,\r\n            }\r\n            blStyle = {\r\n                left: this.state.imageX,\r\n                top: this.state.imageY + this.state.imageHeight - 20\r\n            }\r\n\r\n            overlayStyle = {\r\n                left: this.state.imageX,\r\n                top: this.state.imageY,\r\n                width: this.state.imageWidth,\r\n                height: this.state.imageHeight\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div id=\"camera\" onMouseDown={this.startHandleDrag} onMouseMove={this.moveHandle} onMouseUp={this.endHandleDrag} onTouchStart={this.startHandleDrag} onTouchMove={this.moveHandle} onTouchEnd={this.endHandleDrag}>\r\n\r\n                <video autoPlay={true} id=\"video\"></video>\r\n                <canvas id=\"canvas\" resize=\"true\"></canvas>\r\n                {/* Take picture for iOS / file upload */}\r\n                <form>\r\n                    {!this.state.userInput &&\r\n                        <div className=\"camMenu\">\r\n                            <Form>\r\n                                <Form.Label>Choose Image</Form.Label>\r\n                                <Form.File style={{ \"color\": \"white\" }} type=\"file\" capture=\"environment\" accept=\"image/*\" name=\"cameraInput\" id=\"cameraInput\" onChange={this.upload} />\r\n                            </Form>\r\n                            <Button variant=\"dark\" id=\"captureButton\" onClick={this.takePhoto}>Take Photo</Button>\r\n                        </div>\r\n                    }\r\n                    {this.state.userInput &&\r\n                        <div>\r\n                            <div className=\"camMenu\">\r\n                                <Button variant=\"dark\" id=\"retakeButton\" onClick={this.reload}>Retry</Button>\r\n                                <span>\r\n                                    <Button onClick={this.crop}>Crop</Button>\r\n                                    <Button onClick={() => { this.cropToAspect(16 / 9) }}>16:9</Button>\r\n                                </span>\r\n                                <span>\r\n                                    <Button variant=\"success\" onClick={this.save}>Save</Button>\r\n                                </span>\r\n                            </div>\r\n                            <div style={handleStyle} id=\"cropHandles\">\r\n                                <span id=\"tl\" style={tlStyle}></span>\r\n                                <span id=\"tr\" style={trStyle}></span>\r\n                                <span id=\"br\" style={brStyle}></span>\r\n                                <span id=\"bl\" style={blStyle}></span>\r\n                            </div>\r\n                            <div id=\"imageOverlay\" style={overlayStyle}></div>\r\n                        </div>\r\n                    }\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Camera;\r\n\r\n// import { React, Component } from 'react';\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// class Camera extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             width: 960,\r\n//             height: 540,\r\n//         };\r\n//         this.loadStream = this.loadStream.bind(this);\r\n//         this.takePhoto = this.takePhoto.bind(this);\r\n//         this.reload = this.reload.bind(this);\r\n//         this.save = this.save.bind(this);\r\n//     }\r\n\r\n//     loadStream() {\r\n//         let constraints = { audio: false, video: { width: this.state.width, height: this.state.height} };\r\n//         navigator.mediaDevices\r\n//             .getUserMedia(constraints)\r\n//             .then(function(mediaStream) {\r\n//                 let video = document.querySelector(\"video\");\r\n//                 video.srcObject = mediaStream;\r\n//                 video.onloadedmetadata = function(e) {\r\n//                     video.play();\r\n//                 };\r\n//             })\r\n//             .catch(function(err) {\r\n//                 console.log(err.name + \": \" + err.message);\r\n//             });\r\n//     }\r\n\r\n//     takePhoto() {\r\n//         let w = this.state.width;\r\n//         let h = this.state.height;\r\n//         let video = document.querySelector(\"video\");\r\n//         let canvas = document.querySelector(\"canvas\");\r\n//         let context = canvas.getContext('2d');\r\n\r\n//         canvas.style.display = \"block\";\r\n//         canvas.width = w;\r\n//         canvas.height = h;\r\n//         context.drawImage(video, 0, 0, w, h);\r\n//         video.style.display = \"none\";\r\n\r\n//         let btn = document.getElementById(\"captureButton\");\r\n//         let btn1 = document.getElementById(\"retakeButton\");\r\n//         let btn2 = document.getElementById(\"savePhoto\");\r\n//         btn.style.display = \"none\";\r\n//         btn1.style.display = \"block\";\r\n//         btn2.style.visibility = \"visible\";\r\n        \r\n//     }\r\n\r\n//     reload() {\r\n//         let video = document.querySelector(\"video\");\r\n//         let canvas = document.querySelector(\"canvas\");\r\n\r\n//         canvas.style.display = \"none\";\r\n//         video.style.display = \"block\";\r\n//         this.loadStream();\r\n//         let btn = document.getElementById(\"captureButton\");\r\n//         let btn1 = document.getElementById(\"retakeButton\")\r\n//         let btn2 = document.getElementById(\"savePhoto\")\r\n\r\n//         btn.style.display = \"block\";\r\n//         btn1.style.display = \"none\";\r\n//         btn2.style.visibility = \"hidden\";\r\n//     }\r\n\r\n//     save() {\r\n//         console.log(\"saving image...\");\r\n//         let canvas = document.querySelector(\"canvas\");\r\n//         let video = document.querySelector(\"video\");\r\n//         let image = canvas.toDataURL();\r\n//         console.log({ image });\r\n//         console.log(\"saved!\");\r\n//         localStorage.setItem(\"photo\", image);\r\n//         video.srcObject = null; //this removes video stream\r\n//         //alert user save was successful\r\n//         alert(\"Photo was saved successfully!\");\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         this.loadStream();\r\n//     }\r\n\r\n//     render() {\r\n//         const hiddenSyle = { display: 'none'};\r\n\r\n//         return (\r\n//             <div id=\"camera\">\r\n//                 <h3>Take your image here!</h3>\r\n//                 <video autoPlay={true} id=\"video\"></video>\r\n                \r\n//                 <button id=\"captureButton\" onClick={this.takePhoto}>Take Photo</button>\r\n//                 <button id=\"retakeButton\" onClick={this.reload} style={hiddenSyle}>Retry</button>\r\n//                 <div id=\"savePhoto\"><Link to=\"editor\" onClick={this.save}>✔️ Save and Edit </Link></div>\r\n//                 <canvas id=\"canvas\"></canvas>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Camera;","import { React, Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Button } from 'react-bootstrap';\r\nimport download from \"downloadjs\";\r\nclass Editor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadImage();\r\n        window.addEventListener(\"resize\", this.resize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.resize);\r\n    }\r\n\r\n    resize = () => {\r\n        console.log(\"resizing\")\r\n        if (document.getElementById(\"editableCanvas\")) {\r\n            // resize canvas\r\n            let canvas = document.getElementById(\"editableCanvas\");\r\n            let context = canvas.getContext(\"2d\");\r\n\r\n            canvas.width = window.innerWidth - (window.innerWidth * 0.10);\r\n            canvas.height = window.innerHeight - (window.innerHeight * 0.25);\r\n            // resize content\r\n            let image = this.image;\r\n\r\n            if (image) {\r\n                console.log(\"adding image again\");\r\n                let aspectRatio = image.width / image.height;\r\n                let newWidth = canvas.width;\r\n                let newHeight = newWidth / aspectRatio;\r\n                if (newHeight > canvas.height) {\r\n                    newHeight = canvas.height;\r\n                    newWidth = newHeight * aspectRatio;\r\n                }\r\n\r\n                canvas.width = newWidth;\r\n                canvas.height = newHeight;\r\n                context.drawImage(image, canvas.width / 2 - newWidth / 2, 0, newWidth, newHeight);\r\n            } \r\n        }\r\n    }\r\n\r\n    loadImage = () => {\r\n        // loads the image data onto canvas\r\n        console.log(\"loading\")\r\n\r\n        if (localStorage.length > 0) \r\n        {\r\n            console.log(\"finding previously taken images\");\r\n            let dataURL = localStorage.getItem(\"photo\");\r\n            let image = document.createElement(\"img\");\r\n            image.src = dataURL;\r\n            image.onload = () => {\r\n                this.image = image;\r\n                this.resize()\r\n            }\r\n        }\r\n    }\r\n\r\n    getImageData = () => {\r\n        let canvas = document.getElementById(\"editableCanvas\");\r\n        let context = canvas.getContext('2d');\r\n        let imageData = context.getImageData(0,0, canvas.width, canvas.height);\r\n        return imageData;\r\n    }\r\n\r\n    saveCurrentImageState = () => {\r\n        let canvas = document.getElementById(\"editableCanvas\");\r\n        let img = document.createElement(\"img\");\r\n        img.src = canvas.toDataURL(\"image/jpeg\", 0.95);\r\n        img.onload = () => {\r\n          this.image = img;\r\n        };\r\n    }\r\n\r\n    // convolution function is from: \r\n    // https://www.html5rocks.com/en/tutorials/canvas/imagefilters/\r\n    convoluteImage = (imageData, weights, opaque=1) => {\r\n        const createTempImageData = (w, h) => {\r\n          let tempCanvas = document.createElement(\"canvas\");\r\n          let tempContext = tempCanvas.getContext(\"2d\");\r\n          return tempContext.createImageData(w, h);\r\n        };\r\n        let side = Math.round(Math.sqrt(weights.length));\r\n        let halfSide = Math.floor(side/2);\r\n        let src = imageData.data;\r\n        let sw = imageData.width;\r\n        let sh = imageData.height;\r\n        \r\n        let w = sw;\r\n        let h = sh;\r\n        let output = createTempImageData(w, h);\r\n        let dst = output.data;\r\n\r\n        let alpha = opaque ? 1 : 0;\r\n        // go through each pixel\r\n        for (let y=0; y<h; y++) {\r\n            for (let x=0; x<w; x++) {\r\n                let sy = y;\r\n                let sx = x;\r\n                let dstOff = (y*w+x) * 4;\r\n                //calculate weighted sum\r\n                let r=0, g=0, b=0, a=0;\r\n                for (let cy=0; cy<side; cy++) {\r\n                    for (let cx=0; cx<side; cx++) {\r\n                        let scy = sy + cy - halfSide;\r\n                        let scx = sx + cx - halfSide;\r\n                        if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\r\n                            let srcOff = (scy*sw+scx)*4;\r\n                            let wt = weights[cy*side+cx];\r\n                            r += src[srcOff] * wt;\r\n                            g += src[srcOff+1] * wt;\r\n                            b += src[srcOff+2] * wt;\r\n                            a += src[srcOff+3] * wt;\r\n                        }\r\n                    }\r\n                }\r\n                dst[dstOff] = r;\r\n                dst[dstOff+1] = g;\r\n                dst[dstOff+2] = b;\r\n                dst[dstOff+3] = a + alpha * (255-a)\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n\r\n    applyGreyscale = () => {\r\n        let canvas = document.getElementById(\"editableCanvas\");\r\n        let context = canvas.getContext('2d');\r\n        let imageData = this.getImageData();\r\n        let pixels = imageData.data;\r\n\r\n        for (let i = 0; i < pixels.length; i += 4) {\r\n\r\n            let r = pixels[i],\r\n                g = pixels[i + 1],\r\n                b = pixels[i + 2];\r\n\r\n            let lightness = parseInt(0.2126 * r + 0.7152 * g + 0.0722 * b);\r\n            pixels[i] = pixels[i + 1] = pixels[i + 2] = lightness;\r\n        }\r\n        context.putImageData(imageData, 0, 0);\r\n        this.saveCurrentImageState();\r\n        console.log(\"Applied greyscale\");\r\n    }\r\n\r\n    applySepia = () => {\r\n        let canvas = document.getElementById(\"editableCanvas\");\r\n        let context = canvas.getContext('2d');\r\n        let imageData = this.getImageData();\r\n        let pixels = imageData.data;\r\n\r\n        for (let i = 0; i < pixels.length; i += 4) {\r\n\r\n            let r = pixels[i],\r\n                g = pixels[i + 1],\r\n                b = pixels[i + 2];\r\n\r\n            //using Microsoft's recommended values for Sepia\r\n            let newRed = 0.393 * r + 0.769 * g + 0.189 * b;\r\n            let newGreen = 0.349 * r + 0.686 * g + 0.168 * b;\r\n            let newBlue = 0.272 * r + 0.534 * g + 0.131 * b;\r\n            pixels[i]     =  newRed < 255 ? newRed : 255;\r\n            pixels[i + 1] = newGreen < 255 ? newGreen : 255;\r\n            pixels[i + 2] = newBlue < 255 ? newBlue : 255;\r\n        }\r\n        context.putImageData(imageData, 0, 0);\r\n        this.saveCurrentImageState();\r\n        console.log(\"Applied sepia\");\r\n    }\r\n\r\n    applyBlur = () => {\r\n        let canvas = document.getElementById(\"editableCanvas\");\r\n        let context = canvas.getContext('2d');\r\n        let imageData = this.getImageData();\r\n        let newImageData = this.convoluteImage(imageData,\r\n          [ 1/9, 1/9, 1/9,\r\n            1/9, 1/9, 1/9,\r\n            1/9, 1/9, 1/9 ] \r\n        );\r\n        context.putImageData(newImageData, 0, 0);\r\n        this.saveCurrentImageState();\r\n        console.log(\"Applied blur\");\r\n    }\r\n\r\n    applySharpen = () => {\r\n        let canvas = document.getElementById(\"editableCanvas\");\r\n        let context = canvas.getContext('2d');\r\n        let imageData = this.getImageData();\r\n        let newImageData = this.convoluteImage(imageData,\r\n            [ 0,-1, 0,\r\n             -1, 5, -1,\r\n              0,-1, 0 ]\r\n        );\r\n        context.putImageData(newImageData, 0, 0);\r\n        this.saveCurrentImageState();\r\n        console.log(\"Applied sharpen\");\r\n    }\r\n\r\n    brighten = () => {\r\n        let canvas = document.getElementById(\"editableCanvas\");\r\n        let context = canvas.getContext(\"2d\");\r\n        let imageData = this.getImageData();\r\n        let pixels = imageData.data;\r\n        for (let i=0; i<pixels.length; i+=4) {\r\n            pixels[i] += 5;\r\n            pixels[i+1] += 5;\r\n            pixels[i+2] += 5;\r\n        }\r\n        context.putImageData(imageData, 0, 0);\r\n        this.saveCurrentImageState();\r\n        console.log(\"brightened image\")\r\n    }\r\n\r\n    darken = () => {\r\n        let canvas = document.getElementById(\"editableCanvas\");\r\n        let context = canvas.getContext(\"2d\");\r\n        let imageData = this.getImageData();\r\n        let pixels = imageData.data;\r\n        for (let i=0; i<pixels.length; i+=4) {\r\n            pixels[i] -= 5;\r\n            pixels[i+1] -= 5;\r\n            pixels[i+2] -= 5;\r\n        }\r\n        context.putImageData(imageData, 0, 0);\r\n        this.saveCurrentImageState();\r\n        console.log(\"darkened image\")\r\n    }\r\n\r\n    resetImage = () => {\r\n        this.loadImage();\r\n    }\r\n\r\n    downloadImage = () => {\r\n        let canvas = document.getElementById(\"editableCanvas\");\r\n        let data = canvas.toDataURL(\"image/jpg\");\r\n        // download.js function to download file\r\n        download(data, \"editedImage.jpg\", \"image/jpg\")\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            let location = {\r\n                pathname: this.state.redirect,\r\n            }\r\n            return <Redirect to={location} />\r\n        }\r\n\r\n        return (\r\n        <div id=\"editor\" className=\"text-white\">\r\n            <h3 style={{fontSize: \"2.75rem\"}}>Edit your photo here!</h3>\r\n            <canvas id=\"editableCanvas\" style={{boxShadow: \"10px 10px 10px rgba(55, 55, 55, 0.6)\"}}></canvas>\r\n            <br />\r\n            <div id=\"options\">\r\n                <Button variant=\"outline-light\" onClick={this.resetImage}>Reset Image</Button>\r\n                <Button variant=\"outline-light\" onClick={this.applyGreyscale}>Greyscale</Button>\r\n                <Button variant=\"outline-light\" onClick={this.applySepia}>Sepia</Button>\r\n                <Button variant=\"outline-light\" onClick={this.applyBlur}>Blur</Button>\r\n                <Button variant=\"outline-light\" onClick={this.applySharpen}>Sharpen</Button>\r\n                <Button variant=\"outline-light\" onClick={this.brighten}>Brighten</Button>\r\n                <Button variant=\"outline-light\" onClick={this.darken}>Darken</Button>\r\n            </div>\r\n            <Button variant=\"dark\" size=\"sm\" onClick={this.downloadImage}>Download Image</Button>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Editor;","import React from 'react';\r\n\r\nconst NotFound = () => <h1>Sorry about that! 404 - Page Not Found</h1>\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Route, Switch, BrowserRouter as Router} from 'react-router-dom';\r\nimport Camera from './camera';\r\nimport Editor from './editor';\r\nimport NotFound from './404';\r\nimport 'bootstrap/dist/css/bootstrap.css'; // npm i react-bootstrap bootstrap\r\n\r\n\r\n\r\nconst routing = (\r\n  <React.StrictMode>\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    {/*Switch for error handling */}\r\n    <Switch>\r\n      <Route exact path=\"/\" component={App}            />\r\n      <Route path=\"/camera\" component={Camera}         />\r\n      <Route path=\"/editor\" component={Editor}         />\r\n      <Route component={NotFound}                      />\r\n    </Switch>\r\n\r\n  </Router>\r\n  </React.StrictMode>\r\n)\r\n\r\nReactDOM.render(\r\n  routing,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}